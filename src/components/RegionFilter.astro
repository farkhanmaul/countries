---
// No server-side logic needed for the region filter
---

<div class="relative">
  <div class="relative">
    <select
      id="region-select"
      class="w-full px-4 py-2.5 text-sm text-gray-900 dark:text-white bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:focus:ring-primary-400 dark:focus:border-primary-400 transition-colors duration-200 appearance-none cursor-pointer"
    >
      <option value="">All Regions</option>
      <option value="Africa">Africa</option>
      <option value="Americas">Americas</option>
      <option value="Asia">Asia</option>
      <option value="Europe">Europe</option>
      <option value="Oceania">Oceania</option>
    </select>
    
    <!-- Custom dropdown arrow -->
    <div class="absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none">
      <i data-lucide="chevron-down" class="w-4 h-4 text-gray-400 dark:text-gray-500"></i>
    </div>
  </div>
</div>

<script>
  class RegionFilter {
    private selectElement: HTMLSelectElement | null;

    constructor() {
      this.selectElement = document.getElementById('region-select') as HTMLSelectElement;
      this.init();
    }

    private init(): void {
      if (!this.selectElement) return;

      // Handle region change events
      this.selectElement.addEventListener('change', (e) => {
        const target = e.target as HTMLSelectElement;
        this.handleRegionChange(target.value);
      });
    }

    private handleRegionChange(region: string): void {
      // Dispatch custom event for region filter
      const event = new CustomEvent('region-filter', {
        detail: { region: region }
      });
      document.dispatchEvent(event);
    }

    public setRegion(region: string): void {
      if (this.selectElement) {
        this.selectElement.value = region;
      }
    }

    public getSelectedRegion(): string {
      return this.selectElement?.value || '';
    }
  }

  // Initialize region filter when DOM is loaded
  document.addEventListener('DOMContentLoaded', () => {
    new RegionFilter();
    
    // Initialize Lucide icons
    if (typeof lucide !== 'undefined') {
      lucide.createIcons();
    }
  });
</script>