---
// No server-side logic needed for the navbar
---

<nav class="bg-white dark:bg-gray-900 border-b border-gray-200 dark:border-gray-700 sticky top-0 z-50">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center h-16">
      <!-- Logo/Title -->
      <div class="flex items-center space-x-3 flex-shrink-0">
        <div class="w-8 h-8 bg-gradient-to-br from-primary-600 to-accent-600 rounded-lg flex items-center justify-center">
          <i data-lucide="globe" class="w-5 h-5 text-white"></i>
        </div>
        <h1 class="text-2xl font-bold text-gray-900 dark:text-white">
          Country Explorer
        </h1>
      </div>

      <!-- Navigation Menu & Dark Mode Toggle -->
      <div class="flex items-center space-x-4">
        <!-- Advanced Search Menu -->
        <div class="relative">
          <button 
            id="advanced-search-btn"
            type="button"
            class="flex items-center px-3 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-lg transition-all duration-200"
          >
            <i data-lucide="search" class="w-4 h-4 mr-2"></i>
            Advanced Search
            <i data-lucide="chevron-down" class="w-4 h-4 ml-1"></i>
          </button>
          
          <!-- Dropdown Menu -->
          <div 
            id="advanced-search-dropdown"
            class="absolute right-0 mt-2 w-64 bg-white dark:bg-gray-800 rounded-lg shadow-lg border border-gray-200 dark:border-gray-600 hidden z-50"
          >
            <div class="p-4">
              <p class="text-sm font-medium text-gray-900 dark:text-white mb-3">Search by:</p>
              <div class="space-y-2">
                <button 
                  data-search-type="name" 
                  class="advanced-search-option w-full flex items-center px-3 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors active"
                >
                  <i data-lucide="flag" class="w-4 h-4 mr-3 text-primary-500"></i>
                  <div class="text-left">
                    <div class="font-medium">Country Name</div>
                    <div class="text-xs text-gray-500 dark:text-gray-400">Default search</div>
                  </div>
                </button>
                <button 
                  data-search-type="capital" 
                  class="advanced-search-option w-full flex items-center px-3 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors"
                >
                  <i data-lucide="landmark" class="w-4 h-4 mr-3 text-primary-500"></i>
                  <div class="text-left">
                    <div class="font-medium">Capital City</div>
                    <div class="text-xs text-gray-500 dark:text-gray-400">e.g., Jakarta, London</div>
                  </div>
                </button>
                <button 
                  data-search-type="currency" 
                  class="advanced-search-option w-full flex items-center px-3 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors"
                >
                  <i data-lucide="coins" class="w-4 h-4 mr-3 text-primary-500"></i>
                  <div class="text-left">
                    <div class="font-medium">Currency</div>
                    <div class="text-xs text-gray-500 dark:text-gray-400">e.g., USD, Euro</div>
                  </div>
                </button>
                <button 
                  data-search-type="language" 
                  class="advanced-search-option w-full flex items-center px-3 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors"
                >
                  <i data-lucide="languages" class="w-4 h-4 mr-3 text-primary-500"></i>
                  <div class="text-left">
                    <div class="font-medium">Language</div>
                    <div class="text-xs text-gray-500 dark:text-gray-400">e.g., English, Spanish</div>
                  </div>
                </button>
                <button 
                  data-search-type="demonym" 
                  class="advanced-search-option w-full flex items-center px-3 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors"
                >
                  <i data-lucide="users" class="w-4 h-4 mr-3 text-primary-500"></i>
                  <div class="text-left">
                    <div class="font-medium">People</div>
                    <div class="text-xs text-gray-500 dark:text-gray-400">e.g., Indonesian, American</div>
                  </div>
                </button>
              </div>
            </div>
          </div>
        </div>
        <button 
          id="theme-toggle"
          type="button"
          class="p-2 text-gray-500 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors duration-200"
          aria-label="Toggle dark mode"
        >
          <!-- Sun icon (visible in dark mode) -->
          <svg 
            id="theme-toggle-light-icon" 
            class="w-5 h-5 hidden dark:block" 
            fill="currentColor" 
            viewBox="0 0 20 20" 
            xmlns="http://www.w3.org/2000/svg"
          >
            <path 
              fill-rule="evenodd" 
              d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" 
              clip-rule="evenodd"
            ></path>
          </svg>
          
          <!-- Moon icon (visible in light mode) -->
          <svg 
            id="theme-toggle-dark-icon" 
            class="w-5 h-5 block dark:hidden" 
            fill="currentColor" 
            viewBox="0 0 20 20" 
            xmlns="http://www.w3.org/2000/svg"
          >
            <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
          </svg>
        </button>
      </div>
    </div>
  </div>
</nav>

<script>
  import { initializeTheme, toggleTheme } from '../utils/theme';

  class Navbar {
    private currentSearchType: string = 'name';
    private dropdown: HTMLElement | null;
    private dropdownButton: HTMLElement | null;

    constructor() {
      this.dropdown = document.getElementById('advanced-search-dropdown');
      this.dropdownButton = document.getElementById('advanced-search-btn');
      this.init();
    }

    private init(): void {
      // Initialize theme
      initializeTheme();

      // Theme toggle
      const themeToggle = document.getElementById('theme-toggle');
      if (themeToggle) {
        themeToggle.addEventListener('click', toggleTheme);
      }

      // Advanced search dropdown
      this.setupAdvancedSearch();
    }

    private setupAdvancedSearch(): void {
      if (!this.dropdown || !this.dropdownButton) return;

      // Toggle dropdown
      this.dropdownButton.addEventListener('click', (e) => {
        e.stopPropagation();
        this.toggleDropdown();
      });

      // Close dropdown when clicking outside
      document.addEventListener('click', (e) => {
        if (!this.dropdown?.contains(e.target as Node) && 
            !this.dropdownButton?.contains(e.target as Node)) {
          this.closeDropdown();
        }
      });

      // Handle search type selection
      const searchOptions = document.querySelectorAll('.advanced-search-option');
      searchOptions.forEach(option => {
        option.addEventListener('click', (e) => {
          e.preventDefault();
          const searchType = (option as HTMLElement).dataset.searchType;
          if (searchType) {
            this.selectSearchType(searchType);
          }
        });
      });
    }

    private toggleDropdown(): void {
      if (!this.dropdown) return;
      
      const isHidden = this.dropdown.classList.contains('hidden');
      if (isHidden) {
        this.dropdown.classList.remove('hidden');
        this.dropdown.classList.add('animate-in', 'fade-in-0', 'zoom-in-95');
      } else {
        this.closeDropdown();
      }
    }

    private closeDropdown(): void {
      if (!this.dropdown) return;
      this.dropdown.classList.add('hidden');
      this.dropdown.classList.remove('animate-in', 'fade-in-0', 'zoom-in-95');
    }

    private selectSearchType(searchType: string): void {
      this.currentSearchType = searchType;

      // Update active state
      const options = document.querySelectorAll('.advanced-search-option');
      options.forEach(option => {
        const optionElement = option as HTMLElement;
        if (optionElement.dataset.searchType === searchType) {
          optionElement.classList.add('active', 'bg-primary-50', 'dark:bg-primary-900/20', 'text-primary-700', 'dark:text-primary-300');
        } else {
          optionElement.classList.remove('active', 'bg-primary-50', 'dark:bg-primary-900/20', 'text-primary-700', 'dark:text-primary-300');
        }
      });

      // Dispatch event to update search bar
      const event = new CustomEvent('search-type-changed', {
        detail: { searchType }
      });
      document.dispatchEvent(event);

      // Close dropdown
      this.closeDropdown();
    }

    public getCurrentSearchType(): string {
      return this.currentSearchType;
    }
  }

  // Initialize navbar when DOM is loaded
  document.addEventListener('DOMContentLoaded', () => {
    new Navbar();
    
    // Initialize Lucide icons
    if (typeof lucide !== 'undefined') {
      lucide.createIcons();
    }
  });
</script>