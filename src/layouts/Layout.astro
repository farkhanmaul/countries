---
export interface Props {
  title: string;
  description?: string;
}

const { title, description = "Explore countries from around the world with detailed information about population, geography, culture, and more." } = Astro.props;
---

<!doctype html>
<html lang="en" class="h-full">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- Favicon -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content="/og-image.png" />
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content="/og-image.png" />
    
    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap"
      rel="stylesheet"
    />
    
    <title>{title}</title>
    
    <!-- Initialize theme before page renders to prevent flash -->
    <script is:inline>
      (function() {
        const theme = localStorage.getItem('theme') || 
          (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
        
        if (theme === 'dark') {
          document.documentElement.classList.add('dark');
        }
      })();
    </script>
  </head>
  
  <body class="h-full bg-gray-50 dark:bg-gray-900 font-sans text-gray-900 dark:text-white antialiased transition-colors duration-300">
    <div class="min-h-full flex flex-col">
      <slot />
    </div>
    
    <!-- Global styles for smooth transitions -->
    <style is:global>
      * {
        scroll-behavior: smooth;
      }
      
      /* Custom scrollbar */
      ::-webkit-scrollbar {
        width: 8px;
        height: 8px;
      }
      
      ::-webkit-scrollbar-track {
        @apply bg-gray-100 dark:bg-gray-800;
      }
      
      ::-webkit-scrollbar-thumb {
        @apply bg-gray-400 dark:bg-gray-600 rounded-full;
      }
      
      ::-webkit-scrollbar-thumb:hover {
        @apply bg-gray-500 dark:bg-gray-500;
      }
      
      /* Focus styles */
      .focus-visible:focus {
        @apply outline-none ring-2 ring-primary-500 ring-offset-2 dark:ring-offset-gray-900;
      }
      
      /* Animation utilities */
      @keyframes fadeIn {
        from { opacity: 0; transform: translateY(10px); }
        to { opacity: 1; transform: translateY(0); }
      }
      
      .animate-fade-in {
        animation: fadeIn 0.3s ease-out;
      }
      
      /* Smooth state transitions */
      .transition-all {
        transition-property: all;
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        transition-duration: 150ms;
      }
    </style>
  </body>
</html>